<!doctype html>
<html class="no-js" lang="">

<head>
  <meta charset="utf-8">
  <title>RTFDoc</title>
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="application.css">
  <style type="text/css" media="all">
    pre code,
    pre code .w {
      color: var(--sail-gray300);
    }

    pre code .s2 {
      color: #98c379;
    }

    pre code .kc {
      color: #d19a66;
    }

    pre code .mi {
      color: #56b6c2;
    }
  </style>
</head>
<body data-theme="dark">
  <div id="sidebar" class="sidebar">
    <div class="sidebar-header">
      <div class="sidebar-title">
        odyssey <span class="api">api</span>
      </div>
      <div class="theme-switch-wrapper">
        <div class="theme-switch">
          <label class="theme-switch" for="checkbox">
            <input type="checkbox" id="checkbox" checked="checked" />
            <div class="slider round"></div>
          </label>
        </div>
      </div>
    </div>
    <nav class="sidebar-nav" role="navigation">
      <ul><%= @menu_content %></ul>
    </nav>
  </div>
  <div id="content" class="content-area">
    <div class="top-nav" style="height: 50px"></div>
    <%= @content %>
  </div>
  <script type="text/javascript" src="js/throttle.js"></script>
  <script type="text/javascript" src="js/scroll.js"></script>
  <script type="text/javascript">
    /* Theme switch */

    const toggleSwitch = document.querySelector('.theme-switch input[type="checkbox"]');
    const body = document.querySelector('body');

    function switchTheme(e) {
      if (e.target.checked) {
        body.setAttribute('data-theme', 'dark');
      } else {
        body.setAttribute('data-theme', 'light');
      }
    }

    toggleSwitch.addEventListener('change', switchTheme, false);

    /* Navbar links & expandable */

    const navbarLinks = document.querySelectorAll('nav a');

    function becomeCurrent(e) {
      const target = e.currentTarget;
      const oldCurrent = document.querySelector('nav a.current');
      if (oldCurrent) {
        oldCurrent.classList.remove('current');
      }

      currentLink = target;
      current = target.getAttribute('href').slice(1)
      target.classList.add('current');
    }

    navbarLinks.forEach(l => l.addEventListener('click', becomeCurrent, false));

    const navbarExpandables = document.querySelectorAll('a.expandable');

    function expandItems(e) {
      const target = e.currentTarget;
      const parent = target.parentElement;
      const oldExpanded = document.querySelector('li.expanded');
      if (oldExpanded) {
        oldExpanded.classList.remove('expanded');
      }

      parent.classList.add('expanded');
    }

    navbarExpandables.forEach(b => {
      b.addEventListener('click', expandItems, false);
    });

    /* Nested attributes */

    function toggleChildList(e) {
      const target = e.currentTarget;
      const newContent = target.getAttribute('data-content');

      // Retrieve the <span> containing the text
      const textNode = target.lastElementChild

      // Change button element
      target.setAttribute('data-content', textNode.innerText);
      textNode.innerText = newContent;
      target.classList.toggle('child-revealed');

      // Toggle child list
      const list = target.nextElementSibling;
      list.classList.toggle('hidden');

      // Toggle list <div> as shown
      const parent = target.parentElement;
      parent.classList.toggle('list-shown');
    }

    const childListButtons = document.querySelectorAll('.section-list-title-child');
    childListButtons.forEach(b => {
      b.addEventListener('click', toggleChildList, true)
    })

  </script>
</body>
</html>
